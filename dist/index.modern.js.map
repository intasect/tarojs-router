{"version":3,"file":"index.modern.js","sources":["../src/common.ts","../src/utils.ts","../src/page-data.ts","../src/router.ts","../src/hooks.ts","../src/decorator/router-emit.ts"],"sourcesContent":["export const ROUTE_KEY = 'route_key'\n\nexport interface IRoute<E = any> {\n  /** 页面 url，与配置在 app.config.ts 中的一致 */\n  url: string\n  /** 附加数据 */\n  ext?: E\n  /** 进入路由前的路由中间件 */\n  beforeRouteEnter?: IMiddleware[]\n}\n\nexport interface RouteContext<E = any> {\n  /** 目标路由 */\n  route: IRoute<E>\n  /** 路由参数 */\n  params: any\n}\n\nexport type IMiddleware<E = any> = (ctx: RouteContext<E>, next: () => Promise<any>) => Promise<void>\n\nexport interface RouterConfig {\n  /** 当没有页面可以返回，调用 Router.back 前往的页面 */\n  backRootRoute?: IRoute\n  /** 进入页面前的路由中间件（洋葱模型），参考 koa */\n  middlewares?: IMiddleware[]\n}\n\nexport enum NavigateType {\n  /** 保留当前页面，跳转到应用内的某个页面。但是不能跳到 tabbar 页面。使用 Router.back 可以返回到原页面。小程序中页面栈最多十层。 */\n  navigateTo,\n  /** 关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面。 */\n  redirectTo,\n  /** 关闭所有页面，打开到应用内的某个页面 */\n  reLaunch,\n  /** 跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面 */\n  switchTab,\n}\n\nexport interface NavigateOptions {\n  /** 跳转类型 */\n  type?: NavigateType\n  /** 跳转页面携带的数据，可以是任何类型，到目标页面后使用 useRouter 或 Router.getData 获取 */\n  data?: any\n  /** 路由参数，仅支持 object 类型，不适合携带大量数据，携带大量数据请使用 data */\n  params?: object\n}\n","import Taro from '@tarojs/taro'\nimport { IRoute, ROUTE_KEY } from './common'\n\n/** @internal */\nexport function objectToUrlParams(data: any) {\n  let _result: Array<any> = []\n  for (let key in data) {\n    let value = data[key]\n    if (value === undefined || value === null) continue\n    if (value.constructor == Array) {\n      value.forEach(function (_value) {\n        _result.push(key + '=' + _value)\n      })\n    } else {\n      _result.push(key + '=' + value)\n    }\n  }\n  return _result.join('&')\n}\n\n/** @internal */\nexport function getCurrentRouteKey(): string {\n  const params = Taro.getCurrentInstance().router?.params\n  if (!params || !params[ROUTE_KEY]) return ''\n  return params[ROUTE_KEY] + ''\n}\n\n/** @internal */\nexport function formatPath(route: IRoute, params: object) {\n  let url = route.url\n  let paramsStr = objectToUrlParams(params)\n  url = `${route.url}?${paramsStr}`\n\n  return url\n}","import { getCurrentRouteKey } from \"./utils\"\n\n/** @internal */\nexport class PageData {\n  static _pageData: Map<string, any> = new Map()\n  static _pagePromise: Map<\n    string,\n    {\n      res: (val: any) => void\n      rej: (err: any) => void\n    }\n  > = new Map()\n  static _backErr: Map<string, any> = new Map()\n  static _backData: Map<string, any> = new Map()\n\n  static getPageData<T = any>(default_data?: T): T {\n    let route_key = getCurrentRouteKey()\n    let result = PageData._pageData.get(route_key) || default_data\n    return result\n  }\n\n  static delPageData() {\n    let route_key = getCurrentRouteKey()\n    PageData._pageData.delete(route_key)\n  }\n\n  static getPagePromise() {\n    let route_key = getCurrentRouteKey()\n    return PageData._pagePromise.get(route_key)\n  }\n\n  static delPagePromise() {\n    let route_key = getCurrentRouteKey()\n    PageData._pagePromise.delete(route_key)\n  }\n\n  static setPageData(route_key: string, data: any) {\n    this._pageData.set(route_key, data)\n  }\n\n  static setPagePromise(\n    route_key: string,\n    options: {\n      res: (val: any) => void\n      rej: (err: any) => void\n    }\n  ) {\n    this._pagePromise.set(route_key, options)\n  }\n\n  static emitBack() {\n    const pme = PageData.getPagePromise()\n    if (!pme) return\n    let route_key = getCurrentRouteKey()\n    let err = PageData._backErr.get(route_key)\n    let data = PageData._backData.get(route_key)\n\n    PageData.delPageData()\n    PageData.delPagePromise()\n\n    if (err) {\n      PageData._backErr.delete(route_key)\n      pme.rej(err)\n    } else if (data) {\n      PageData._backData.delete(route_key)\n      pme.res(data)\n    } else {\n      pme.res(null)\n    }\n  }\n\n  static setBackData(data?: any) {\n    let route_key = getCurrentRouteKey()\n    PageData._backData.set(route_key, data)\n  }\n\n  static setBackError(err: any) {\n    let route_key = getCurrentRouteKey()\n    PageData._backErr.set(route_key, err)\n  }\n\n}\n","import { IRoute, NavigateOptions, NavigateType, ROUTE_KEY, RouterConfig } from './common'\n\nimport { PageData } from './page-data'\nimport Taro from '@tarojs/taro'\nimport compose from 'koa-compose'\nimport { formatPath } from './utils'\n\nexport class Router {\n  private static _config?: RouterConfig\n\n  /** 初始化配置 */\n  static config(config: RouterConfig) {\n    Router._config = config\n  }\n\n  /**\n   * 页面跳转\n   * @param route 目标路由对象\n   * @param options 跳转选项\n   */\n  static async navigate<T = Taro.General.CallbackResult>(route: IRoute, options?: NavigateOptions): Promise<T> {\n    options = { ...{ type: NavigateType.navigateTo, params: {} }, ...options }\n    if (options.params![ROUTE_KEY]) throw Error('params 中 route_key 为保留字段，请用其他名称')\n    const route_key = (options.params![ROUTE_KEY] = Date.now() + '')\n\n\n\n    if (options.data) {\n      PageData.setPageData(route_key, options.data)\n    }\n\n    const middlewares = [...(Router._config?.middlewares || []), ...(route.beforeRouteEnter || [])]\n    const fn = compose(middlewares)\n    await fn({ route, params: options.params })\n    let url = formatPath(route, options.params!)\n\n    return new Promise((res, rej) => {\n      PageData.setPagePromise(route_key, { res, rej })\n\n      switch (options!.type) {\n        case NavigateType.reLaunch:\n          Taro.reLaunch({ url })\n          break\n        case NavigateType.redirectTo:\n          Taro.redirectTo({ url })\n          break\n        case NavigateType.switchTab:\n          Taro.switchTab({ url })\n          break\n        default:\n          Taro.navigateTo({ url })\n          break\n      }\n    })\n  }\n\n  /**\n   * 返回上一个页面\n   * @param route 当没有页面可以返回，前往的页面\n   */\n  static back(route?: IRoute) {\n    const currentPages = Taro.getCurrentPages()\n    if (currentPages.length > 1) {\n      return Taro.navigateBack()\n    }\n\n    route = route || Router._config?.backRootRoute\n    if (route) {\n      return Router.navigate(route, { type: NavigateType.redirectTo })\n    } else {\n      console.error('没有页面可以回退了')\n      return Promise.resolve()\n    }\n  }\n\n  /** 发送 backData、backError 数据到上一个页面 */\n  static emitBack() {\n    PageData.emitBack()\n  }\n\n  /**\n   * 获取上一个页面携带过来的数据\n   * @param default_data 默认数据\n   */\n  static getData<T = any>(default_data?: T): T | undefined {\n    return PageData.getPageData(default_data)\n  }\n\n  /**\n   * 返回上一个页面并返回数据。\n   * 如果是 class 页面组件，请在页面级组件使用 @RouterEmit 装饰，\n   * 如果是函数组件，请调用 useRouter，否则 backData 无法成功返回数据到上一个页面\n   * @param data 返回的数据\n   */\n  static backData(data?: any) {\n    PageData.setBackData(data)\n    return Router.back()\n  }\n\n  /**\n   * 返回上一个页面并抛出异常\n   * 如果是 class 页面组件，请在页面级组件使用 @RouterEmit 装饰，\n   * 如果是函数组件，请调用 useRouter，否则 backError 无法成功抛出异常到上一个页面\n   * @param err 抛出的异常\n   */\n  static backError(err: any) {\n    PageData.setBackError(err)\n    return Router.back()\n  }\n}\n","import { getCurrentInstance, useRouter as useRouterTaro } from '@tarojs/taro'\n\nimport { Router } from './router'\nimport { useEffect } from 'react'\n\nexport function useRouter(defaultParams?: any) {\n  useEffect(() => {\n    const instance = getCurrentInstance()\n    if (!instance.page) return\n    const routerEmit = instance.page['routerEmit']\n    if (routerEmit) return\n    instance.page['routerEmit'] = true\n    const originOnUnload = instance.page.onUnload\n    instance.page.onUnload = () => {\n      originOnUnload.bind(instance.page)\n      Router.emitBack()\n    }\n  }, [])\n  const { params } = useRouterTaro()\n  const data = Router.getData()\n\n  return {\n    /** 路由参数 */\n    params: { ...defaultParams, ...params },\n    /** 上一个页面携带过来的数据 */\n    data,\n    /** 返回上一个页面并返回数据 */\n    backData: Router.backData,\n    /** 返回上一个页面并抛出异常 */\n    backError: Router.backError,\n    /** 返回上一个页面 */\n    back: Router.back,\n  }\n}\n","import { Router } from \"../router\"\n\n\n/**\n * Class 页面组件支持\n */\nexport function RouterEmit(target: any) {\n  const originComponentWillUnmount = target.prototype.componentWillUnmount\n  target.prototype.componentWillUnmount = () => {\n    originComponentWillUnmount && originComponentWillUnmount()\n    Router.emitBack()\n  }\n\n  return target\n}"],"names":["ROUTE_KEY","NavigateType","objectToUrlParams","data","_result","key","value","undefined","constructor","Array","forEach","_value","push","join","getCurrentRouteKey","params","Taro","getCurrentInstance","router","formatPath","route","url","paramsStr","PageData","getPageData","default_data","route_key","result","_pageData","get","delPageData","getPagePromise","_pagePromise","delPagePromise","setPageData","set","setPagePromise","options","emitBack","pme","err","_backErr","_backData","rej","res","setBackData","setBackError","Map","Router","config","_config","navigate","type","navigateTo","Error","Date","now","middlewares","beforeRouteEnter","fn","compose","Promise","reLaunch","redirectTo","switchTab","back","currentPages","getCurrentPages","length","navigateBack","backRootRoute","console","error","resolve","getData","backData","backError","useRouter","defaultParams","useEffect","instance","page","routerEmit","originOnUnload","onUnload","bind","useRouterTaro","RouterEmit","target","originComponentWillUnmount","prototype","componentWillUnmount"],"mappings":"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"}